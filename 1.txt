CREATE PROCEDURE `pdt_daily_financial_order_report`(
		IN rpt_date date 
) 
BEGIN
DECLARE date_today,date_yestoday datetime;

delete from financial_order_report where day=date_yestoday;

insert into `financial_order_report` 
(`day`,`post_order_id`,`partner_type`,`order_status`,`goods_price`,`goods_price_derate`,`official_postage`,`transport_postage`,`transport_postage_derate`,
 `place_order_goods_price`,`place_order_postage`,`offline_settle_price`,`transport_postage_cost`,
 `official_goods_refund`,`goods_price_refund`,`goods_price_derate_refund`,`official_postage_refund`,`transport_postage_refund`,`transport_postage_derate_refund`,
 `goods_fee`,`transport_fee`,`purchase_cost`,`purchase_profit`,`transport_cost`,`transport_profit`)
select date_yestoday day,
       rst.post_order_id,
       case when `partner_id` =1 then '剁手帮' else concat('合作伙伴-',(select name from partner_ext_info pei where pei.partner_id=rst.partner_id)) end partner_type,
       case when financial_type_max>1000 and financial_type_max<1100 then '[1]已支付' 
            when financial_type_max>1100 and financial_type_max<1200 then '[2]已下单'
            when financial_type_max>1200 and financial_type_max<1300 then '[5]已出仓'
            when financial_type_max>1300 and financial_type_max<1400 then '[4]有砍单/有退款'
            when financial_type_max>1400 and financial_type_max<1500 then '[3]有退款' end
       order_status,
        #
       goods_price,
       goods_price_derate,
       official_postage,
       transport_postage,
       transport_postage_derate,
        #
       place_order_goods_price,
       place_order_postage,
       offline_settle_price,
        #
       transport_postage_cost,
       official_goods_refund,
        #
       goods_price_refund,
       goods_price_derate_refund,
       official_postage_refund,
       transport_postage_refund,
       transport_postage_derate_refund,
        #
       case when financial_type_max>=1002 then goods_price+ goods_price_derate else 0 end goods_fee,
        #
       case when financial_type_max>=1022 then transport_postage+ transport_postage_derate else 0 end transport_fee,
        #
       case when financial_type_max>=1104 then place_order_goods_price+ place_order_postage else 0 end purchase_cost,
        #
       case when financial_type_max>=1104 then goods_price+ goods_price_derate+ official_postage+ #
       place_order_goods_price+ place_order_postage+ #只计算了线上订单
       goods_price_refund+ goods_price_derate_refund+ official_postage_refund+ official_goods_refund else 0 end purchase_profit,
        #
       case when financial_type_max>=1201 then transport_postage_cost else 0 end transport_cost,
        #
       case when financial_type_max>=1201 then transport_postage+ transport_postage_derate+ transport_postage_refund+ transport_postage_derate_refund+ transport_postage_cost else 0 end transport_profit
  from(
select fod.post_order_id, #
       po.partner_id,
       rst2.financial_type_min,
       rst2.financial_type_max,
       ifnull(sum(case when rst2.financial_type_max>=1001 and `financial_type`= 1001 then ifnull(`amount_cn`, 0) end), 0) goods_price, #
       ifnull(sum(case when rst2.financial_type_max>=1002 and `financial_type`= 1002 then -ifnull(`amount_cn`, 0) end), 0) goods_price_derate, #
       ifnull(sum(case when rst2.financial_type_max>=1011 and `financial_type`= 1011 then ifnull(`amount_cn`, 0) end), 0) official_postage, #
       ifnull(sum(case when rst2.financial_type_max>=1021 and `financial_type`= 1021 then ifnull(`amount_cn`, 0) end), 0) transport_postage, #
       ifnull(sum(case when rst2.financial_type_max>=1022 and `financial_type`= 1022 then -ifnull(`amount_cn`, 0) end), 0) transport_postage_derate, #
        #
       ifnull(sum(case when rst2.financial_type_max>=1103 and `financial_type`= 1103 then -ifnull(`amount`*currency_rate/100, 0) else 0 end), 0) place_order_goods_price, #
       ifnull(sum(case when rst2.financial_type_max>=1104 and `financial_type`= 1104 then -ifnull(`amount`*currency_rate/100, 0) else 0 end), 0) place_order_postage, #
       ifnull(sum(case when rst2.financial_type_max>=1105 and `financial_type`= 1105 then -ifnull(`amount_cn`, 0) end), 0) offline_settle_price, #
        #
       ifnull(sum(case when rst2.financial_type_max>=1201 and `financial_type`= 1201 then -ifnull(`amount_cn`, 0) end), 0) transport_postage_cost, #
        #
       ifnull(sum(case when rst2.financial_type_max>=1301 and `financial_type`= 1301 then ifnull(`amount_cn`, 0) end), 0) official_goods_refund, #
        #
       ifnull(sum(case when rst2.financial_type_max>=1401 and `financial_type`= 1401 then -ifnull(`amount_cn`, 0) end), 0) goods_price_refund, #
       ifnull(sum(case when rst2.financial_type_max>=1402 and `financial_type`= 1402 then ifnull(`amount_cn`, 0) end), 0) goods_price_derate_refund, #
       ifnull(sum(case when rst2.financial_type_max>=1411 and `financial_type`= 1411 then -ifnull(`amount_cn`, 0) end), 0) official_postage_refund, #
       ifnull(sum(case when rst2.financial_type_max>=1421 and `financial_type`= 1421 then -ifnull(`amount_cn`, 0) end), 0) transport_postage_refund, #
       ifnull(sum(case when rst2.financial_type_max>=1422 and `financial_type`= 1422 then ifnull(`amount_cn`, 0) end), 0) transport_postage_derate_refund
  from `post_order` po, financial_order_detail fod,( select post_order_id, min(financial_type) financial_type_min, max(financial_type) financial_type_max from financial_order_detail group by post_order_id) rst2 
      where po.`id` =fod.`post_order_id` and po.`payment_time` >=date_yestoday and po.`payment_time` <date_today and fod.post_order_id=rst2.post_order_id
 group by fod.post_order_id,po.partner_id) rst 
where rst.financial_type_min=1001 order by order_status;
END 


ALTER TABLE `firstlink`.`user_recommend_url` 
ADD COLUMN `instorage_time` TIMESTAMP NULL AFTER `status`;
ALTER TABLE `firstlink`.`user_recommend_url` 
ADD COLUMN `completed_time` TIMESTAMP NULL AFTER `status`;
分支1